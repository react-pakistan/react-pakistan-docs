"use strict";
/**
 * A util function to read svg icon directory and its content
 * and constructs an icon story for all of it's subdirectories
 *
 * @param fs any
 * @returns an auto generated icon story file
 * @author Taimoor Khan
 * @remarks React Icon Collection
 */
/** End file docs */
Object.defineProperty(exports, "__esModule", { value: true });
exports.generateReactIcons = void 0;
const react_icon_story_template_1 = require("./react-icon-story-template");
exports.generateReactIcons = (fs) => {
    const iconDir = './assets/';
    const saveDir = './src/__stories__/';
    let iconListOutput = '';
    let level1FileName = '';
    // Read root Icon directory
    fs.readdirSync(iconDir).forEach((fileName) => {
        if (fileName === '.DS_Store')
            return;
        const level1Dir = `${iconDir}${fileName}`;
        iconListOutput = `/**
 * Generated by scripts/generate-icons.js
 * DO NOT EDIT!
 */

import * as Icons from '../${fileName}';

export const ICON_LIST = [
`;
        // Read level1-directory
        fs.readdirSync(level1Dir).forEach((_level1FileName) => {
            if (_level1FileName === '.DS_Store')
                return;
            level1FileName = _level1FileName;
            iconListOutput += `  { icon: Icons.${level1FileName.split('.')[0]}, name: '${level1FileName.split('.')[0]}' },
`;
        });
        iconListOutput += `];
`;
        const categoryName = fileName.split('-')
            .map((str) => str[0].toUpperCase() + str.slice(1)).join('');
        const story = react_icon_story_template_1.reactIconStoryTemplate(categoryName, fileName);
        fs.writeFileSync(`${saveDir}/${fileName}.ts`, iconListOutput);
        fs.writeFileSync(`${saveDir}/${fileName}.story.tsx`, story);
    });
};
