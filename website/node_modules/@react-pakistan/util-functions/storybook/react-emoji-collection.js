"use strict";
/**
 * A util function to read svg emoji directory and its content
 * and constructs an emoji story for all of it's subdirectories
 *
 * @param fs any
 * @returns an auto generated emoji story file
 * @author Taimoor Khan
 * @remarks React Emoji Collection
 */
/** End file docs */
Object.defineProperty(exports, "__esModule", { value: true });
exports.generateReactEmojis = void 0;
const react_emoji_story_template_1 = require("./react-emoji-story-template");
exports.generateReactEmojis = (fs) => {
    const emojiDir = './assets/';
    const saveDir = './src/__stories__/';
    // Read root Emoji directory
    fs.readdirSync(emojiDir).forEach((fileName) => {
        let emojiListOutput = '';
        let level1FileName = '';
        if (fileName === '.DS_Store')
            return;
        const level1Dir = `${emojiDir}${fileName}`;
        // Read level1-directory
        fs.readdirSync(level1Dir).forEach((_level1FileName) => {
            if (_level1FileName === '.DS_Store')
                return;
            level1FileName = _level1FileName;
            const level2Dir = `${emojiDir}${fileName}/${_level1FileName}`;
            emojiListOutput = `/**
 * Generated by scripts/generate-emojis.js.
 * DO NOT EDIT!
 */

import * as Emojis from '../../${fileName}/${_level1FileName}';

export const EMOJI_LIST = [
`;
            // Read level2-directory
            fs.readdirSync(level2Dir).forEach((level2FileName) => {
                if (level2FileName === '.DS_Store')
                    return;
                // eslint-disable-next-line max-len
                emojiListOutput += `  { emoji: Emojis.${level2FileName.split('.')[0]}, name: '${level2FileName.split('.')[0]}' },
`;
            });
            emojiListOutput += `];
  `;
            if (!fs.existsSync(`${saveDir}${fileName}`)) {
                fs.mkdirSync(`${saveDir}${fileName}`);
            }
            const mainCategoryName = fileName.split('-')
                .map((str) => str[0].toUpperCase() + str.slice(1)).join('');
            const subCategoryName = level1FileName.split('-')
                .map((str) => str[0].toUpperCase() + str.slice(1)).join('');
            const story = react_emoji_story_template_1.reactEmojiStoryTemplate(mainCategoryName, subCategoryName, level1FileName);
            fs.writeFileSync(`${saveDir}${fileName}/${level1FileName}.ts`, emojiListOutput);
            fs.writeFileSync(`${saveDir}${fileName}/${level1FileName}.story.tsx`, story);
        });
    });
};
