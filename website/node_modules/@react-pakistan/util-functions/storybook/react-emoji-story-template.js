"use strict";
/**
 * A util function to print React Story for Icons
 *
 * @param mainCategory string
 * @param subCategory string
 * @param iconListDirName string
 * @returns an auto generated icon story file
 * @author Taimoor Khan
 * @remarks React Emoji Collection
 */
/** End file docs */
Object.defineProperty(exports, "__esModule", { value: true });
exports.reactEmojiStoryTemplate = void 0;
exports.reactEmojiStoryTemplate = (mainCategory, subCategory, emojiListDirName) => `/*
 * Generated by scripts/generate-emojis.js
 * DO NOT EDIT!
 */

import React, { ReactElement } from 'react';
import { EmojiWrapper, EmojiTextWrapper, EmojiItem } from '../../styled';
import { StyledStory } from '../../styled-app';
import { EMOJI_LIST } from './${emojiListDirName}';

const emojiStyle = { width: '7rem', height: '7rem' };

const renderItem = (
  item : { emoji : React.SFC<React.SVGProps<SVGSVGElement>> , name : string }
) : ReactElement => {
  const Emoji = item.emoji;
  return (
    <EmojiItem
      key={item.name}
    >
      <Emoji style={emojiStyle} />
      <EmojiTextWrapper>
        {item.name}
      </EmojiTextWrapper>
    </EmojiItem>
  );
};

const emojis = EMOJI_LIST.map(renderItem);

export const ${subCategory} = () : ReactElement => (
  <StyledStory>
    <EmojiWrapper>
      {emojis}
    </EmojiWrapper>
  </StyledStory>
);

export default {
  title: '${mainCategory}/${subCategory}',

  parameters: {
    component: ${subCategory},
  },
};
`;
