"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CheckBoxWithFieldLabel = exports.CheckBox = void 0;
var react_1 = __importDefault(require("react"));
var styled_1 = require("./styled");
var field_label_1 = require("../hoc/field-label");
exports.CheckBox = function (_a) {
    var check = _a.check, checkedColor = _a.checkedColor, isChecked = _a.isChecked, onChange = _a.onChange, unCheckedColor = _a.unCheckedColor, rest = __rest(_a, ["check", "checkedColor", "isChecked", "onChange", "unCheckedColor"]);
    return (react_1.default.createElement(styled_1.CheckBoxContainer, __assign({ onClick: onChange }, rest),
        react_1.default.createElement(styled_1.HideNativeCheckbox, null),
        react_1.default.createElement(styled_1.StyledCheckbox, { checkedColor: checkedColor, isChecked: isChecked, unCheckedColor: unCheckedColor }, check && isChecked ? check : (react_1.default.createElement(styled_1.Check, { viewBox: '0 0 24 24' },
            react_1.default.createElement("polyline", { points: '20 6 9 17 4 12' }))))));
};
exports.CheckBoxWithFieldLabel = field_label_1.withFieldLabel(exports.CheckBox);
