/// <reference types="react" />
import { IResponsiveProps } from '@react-pakistan/util-functions';
export declare enum BUTTON_FORM_ENCTYPE {
    APPLICATION = "application/x-www-form-urlencoded",
    MULTIPART = "multipart/form-data",
    TEXT = "text/plain"
}
export declare enum BUTTON_FORM_METHODS {
    GET = "get",
    POST = "post"
}
export declare enum BUTTON_FORM_TARGET {
    BLANK = "_blank",
    PARENT = "_parent",
    SELF = "_self",
    TOP = "_top"
}
export declare enum BUTTON_TYPE {
    BUTTON = "button",
    RESET = "reset",
    SUBMIT = "submit"
}
export interface IButtonAttrsProps {
    /**
     * Specifies that a button should automatically get focus when the page loads
     * @default false
     */
    autoFocus?: boolean;
    /**
     * Specifies that a button should be disabled
     * @default false
     */
    disabled?: boolean;
    /**
     * Specifies one or more forms the button belongs to
     * @default ''
     */
    form?: string;
    /**
     * Specifies where to send the form-data when a form is submitted. Only for type="submit"
     * @default ''
     */
    formaction?: string;
    /**
     * Specifies how form-data should be encoded before sending it to a server. Only for type="submit"
     * @default BUTTON_FORM_ENCTYPE.text
     */
    formenctype?: BUTTON_FORM_ENCTYPE;
    /**
     * Specifies how to send the form-data (which HTTP method to use). Only for type="submit"
     * @default BUTTON_FORM_METHODS.GET
     */
    formmethod?: BUTTON_FORM_METHODS;
    /**
     * Specifies that the form-data should not be validated on submission. Only for type="submit"
     * @default false
     */
    formnovalidate?: boolean;
    /**
     * Specifies where to display the response after submitting the form. Only for type="submit"
     * @default BUTTON_FORM_TARGET.self
     */
    formtarget?: BUTTON_FORM_TARGET;
    /**
     * Specifies a name for the button
     * @default ''
     */
    name?: string;
    /**
     * Specifies the type of button
     * @default BUTTON_TYPE.type
     */
    type?: BUTTON_TYPE;
    /**
     * Specifies an initial value for the button
     * @default ''
     */
    value?: string;
}
export interface IButtonProps extends IResponsiveProps {
    /**
     * Specifies the background color of the button
     * @default theme.colors.white
     */
    backgroundColor?: string;
    /**
     * Specifies the border of the button
     * @default none
     */
    border?: string | false;
    /**
     * Specifies the border radius of the button
     * @default ''
     */
    borderRadius?: string;
    /**
     * Specifies if button is disabled or not
     */
    disabled?: boolean;
    /**
     * Specifies the height of the button
     * @default auto
     */
    height?: string;
    /**
     * Specifies the onClick handler of the button
     */
    onClick?: (event: React.MouseEvent<HTMLButtonElement>) => void;
    /**
     * Specifies the padding of the button
     * @default ''
     */
    padding?: string;
    /**
     * Specifies the width of the button
     * @default auto
     */
    width?: string;
}
