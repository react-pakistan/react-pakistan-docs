import { ITheme } from '@react-pakistan/util-functions';
import * as React from 'react';
import * as styledComponents from 'styled-components';
declare const styled: styledComponents.ThemedStyledInterface<ITheme>, css: styledComponents.ThemedCssFunction<ITheme>, createGlobalStyle: <P extends object = {}>(first: TemplateStringsArray | styledComponents.CSSObject | styledComponents.InterpolationFunction<styledComponents.ThemedStyledProps<P, ITheme>>, ...interpolations: styledComponents.Interpolation<styledComponents.ThemedStyledProps<P, ITheme>>[]) => styledComponents.GlobalStyleComponent<P, ITheme>, keyframes: (strings: TemplateStringsArray | styledComponents.CSSKeyframes, ...interpolations: styledComponents.SimpleInterpolation[]) => styledComponents.Keyframes, ThemeProvider: styledComponents.BaseThemeProviderComponent<ITheme, ITheme>;
export { styled, css, createGlobalStyle, keyframes, ThemeProvider };
export declare const StyledApp: styledComponents.StyledComponent<"div", ITheme, {}, never>;
export declare const StyledStory: ({ children }: {
    children: React.ReactNode;
}) => JSX.Element;
export declare type WithTheme<P = {}> = styledComponents.ThemedStyledProps<P, ITheme>;
