(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{110:function(e,t,o){"use strict";o.r(t);var a=o(2),i=o(117),c=o(121),n=o(120),l=o(116),r=o(123),s=o(118),m=o(115),d=o(0),g=o.n(d),u=o(162),p=o(7),v=o(54),f=o.n(v);const E=({description:e,imageUrl:t,route:o,title:a})=>{const n=Object(c.a)(t);return g.a.createElement("div",{className:Object(s.a)("col col--5",f.a.feature)},n&&g.a.createElement("div",{className:"text--center"},g.a.createElement("img",{className:f.a.featureImage,src:n,alt:a})),g.a.createElement(u.H3,{color:"#006600",textAlign:"center"},a),g.a.createElement(u.Spacer,{margin:"1.5rem 0"}),g.a.createElement(u.Text,{color:"#006600",textAlign:"center"},e),g.a.createElement(u.Spacer,{margin:"1.5rem 0"}),g.a.createElement("div",{className:f.a.buttons},g.a.createElement(i.a,{className:Object(s.a)("button button--outline button--secondary button--lg",f.a.getStarted),to:Object(c.a)(o)},"Read Docs")))};E.propTypes={description:p.string.isRequired,imageUrl:p.string.isRequired,route:p.string.isRequired,title:p.string.isRequired};const b=[{title:"React Commons Collection",imageUrl:"img/react-commons.svg",route:"docs/react-commons-collection",description:g.a.createElement(g.a.Fragment,null,g.a.createElement("code",null,"React Commons Collection")," library is the most generic form of components, these components can be extended into anything specific as per your design specs.")},{title:"React UI Collection",imageUrl:"img/react-ui.svg",route:"docs/react-ui-collection",description:g.a.createElement(g.a.Fragment,null,g.a.createElement("code",null,"React UI Collection")," library is extended on React Commons collection library, creating semi-dynamic UI/UX implementation of various interfaces e.g. eCommerce app and more.")},{title:"React Icon Collection",imageUrl:"img/react-icon.svg",route:"docs/react-icon-collection",description:g.a.createElement(g.a.Fragment,null,g.a.createElement("code",null,"React Icon Collection")," library is a categorised sets of Reactified versions of SVG icon components, designed to be friendly for developers, you can customise icons on the fly, e.g its colors, size etc.")},{title:"React Logo Collection",imageUrl:"img/react-logo.svg",route:"docs/react-logo-collection",description:g.a.createElement(g.a.Fragment,null,g.a.createElement("code",null,"React Logo Collection")," library is a categorised sets of Reactified versions of SVG logo components, designed to be friendly for developers, you can customise logos on the fly, e.g its colors, size etc.")},{title:"React Emoji Collection",imageUrl:"img/react-emoji.svg",route:"docs/react-emoji-collection",description:g.a.createElement(g.a.Fragment,null,g.a.createElement("code",null,"React Emoji Collection")," library is a categorised sets of Reactified versions of SVG logo components, designed to be friendly for developers, you can customise emojis on the fly, e.g its size etc.")},{title:"React Native Commons Collection",imageUrl:"img/react-native-commons.svg",route:"docs/react-commons-collection",description:g.a.createElement(g.a.Fragment,null,g.a.createElement("code",null,"React Native Commons Collection")," library is the most generic form of components, these components can be extended into anything specific as per your design specs.")},{title:"React Native UI Collection",imageUrl:"img/react-native-ui.svg",route:"docs/react-ui-collection",description:g.a.createElement(g.a.Fragment,null,g.a.createElement("code",null,"React Native UI Collection")," library is extended on React Native Commons collection library, creating semi-dynamic UI/UX implementation of various interfaces.")},{title:"React Native Icon Collection",imageUrl:"img/react-native-icon.svg",route:"docs/react-icon-collection",description:g.a.createElement(g.a.Fragment,null,g.a.createElement("code",null,"React Native Icon Collection")," library is a categorised sets of Reactified versions of SVG icon components, designed to be friendly for developers, you can customise icons on the fly, e.g its colors, size etc.")},{title:"React Native Logo Collection",imageUrl:"img/react-native-logo.svg",route:"docs/react-logo-collection",description:g.a.createElement(g.a.Fragment,null,g.a.createElement("code",null,"React Native Logo Collection")," library is a categorised sets of Reactified versions of SVG logo components, designed to be friendly for developers, you can customise logos on the fly, e.g its colors, size etc.")},{title:"React Native Emoji Collection",imageUrl:"img/react-native-emoji.svg",route:"docs/react-emoji-collection",description:g.a.createElement(g.a.Fragment,null,g.a.createElement("code",null,"React Native Emoji Collection")," library is a categorised sets of Reactified versions of SVG logo components, designed to be friendly for developers, you can customise emojis on the fly, e.g its size etc.")},{title:"React Native Boilerplate",imageUrl:"img/react-native-boilerplates.svg",description:g.a.createElement(g.a.Fragment,null,"A well curated and high in-demand set of ",g.a.createElement("code",null,"React Native boilerplate")," with various possibilities and combinations.")},{title:"React Design Collection",imageUrl:"img/react-design.svg",description:g.a.createElement(g.a.Fragment,null,"This project is still under development for its initial launch phase.")}];t.default=()=>{const e=Object(n.a)(),{siteConfig:t={}}=e;return g.a.createElement(m.ThemeProvider,{theme:l.theme},g.a.createElement(r.a,{title:"Hello from "+t.title,description:"Description will go into a meta tag in <head />"},g.a.createElement("header",{className:Object(s.a)("hero hero--primary",f.a.heroBanner)},g.a.createElement("div",{className:"container"},g.a.createElement("img",{src:"../static/img/react-pakistan-logo-white.svg",alt:"React Pakistan Logo",width:"150rem"}),g.a.createElement("h1",{className:"hero__title"},t.title),g.a.createElement("h2",{className:"hero__subtitle"},t.tagline),g.a.createElement("div",{className:f.a.buttons},g.a.createElement(i.a,{className:Object(s.a)("button button--outline button--secondary button--lg",f.a.getStarted),to:Object(c.a)("docs/")},"Read Docs")))),g.a.createElement("main",null,b&&b.length>0&&g.a.createElement("section",{className:f.a.features},g.a.createElement("div",{className:"container"},g.a.createElement("div",{className:"row"},b.map(((e,t)=>g.a.createElement(E,Object(a.a)({key:t},e))))))))))}}}]);