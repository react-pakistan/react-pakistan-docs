(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{108:function(e,t,o){"use strict";o.r(t);var a=o(2),i=o(115),c=o(119),n=o(118),l=o(114),r=o(121),s=o(116),m=o(0),d=o.n(m),g=o(113),u=o(54),p=o.n(u),v=o(138),f=o(7);const E=({description:e,imageUrl:t,route:o,title:a})=>{const n=Object(c.a)(t);return d.a.createElement("div",{className:Object(s.a)("col col--5",p.a.feature)},n&&d.a.createElement("div",{className:"text--center"},d.a.createElement("img",{className:p.a.featureImage,src:n,alt:a})),d.a.createElement(v.H3,{color:"#006600",textAlign:"center"},a),d.a.createElement(v.Spacer,{margin:"1.5rem 0"}),d.a.createElement(v.Text,{color:"#006600",textAlign:"center"},e),d.a.createElement(v.Spacer,{margin:"1.5rem 0"}),d.a.createElement("div",{className:p.a.buttons},d.a.createElement(i.a,{className:Object(s.a)("button button--outline button--secondary button--lg",p.a.getStarted),to:Object(c.a)(o)},"Read Docs")))};E.propTypes={description:f.string.isRequired,imageUrl:f.string.isRequired,route:f.string.isRequired,title:f.string.isRequired};const b=[{title:"React Commons Collection",imageUrl:"img/react-commons.svg",route:"docs/react-commons-collection",description:d.a.createElement(d.a.Fragment,null,d.a.createElement("code",null,"React Commons Collection")," library is the most generic form of components, these components can be extended into anything specific as per your design specs.")},{title:"React UI Collection",imageUrl:"img/react-ui.svg",route:"docs/react-ui-collection",description:d.a.createElement(d.a.Fragment,null,d.a.createElement("code",null,"React UI Collection")," library is extended on React Commons collection library, creating semi-dynamic UI/UX implementation of various interfaces e.g. eCommerce app and more.")},{title:"React Icon Collection",imageUrl:"img/react-icon.svg",route:"docs/react-icon-collection",description:d.a.createElement(d.a.Fragment,null,d.a.createElement("code",null,"React Icon Collection")," library is a categorised sets of Reactified versions of SVG icon components, designed to be friendly for developers, you can customise icons on the fly, e.g its colors, size etc.")},{title:"React Logo Collection",imageUrl:"img/react-logo.svg",route:"docs/react-logo-collection",description:d.a.createElement(d.a.Fragment,null,d.a.createElement("code",null,"React Logo Collection")," library is a categorised sets of Reactified versions of SVG logo components, designed to be friendly for developers, you can customise logos on the fly, e.g its colors, size etc.")},{title:"React Emoji Collection",imageUrl:"img/react-emoji.svg",route:"docs/react-emoji-collection",description:d.a.createElement(d.a.Fragment,null,d.a.createElement("code",null,"React Emoji Collection")," library is a categorised sets of Reactified versions of SVG logo components, designed to be friendly for developers, you can customise emojis on the fly, e.g its size etc.")},{title:"React Native Commons Collection",imageUrl:"img/react-native-commons.svg",route:"docs/react-commons-collection",description:d.a.createElement(d.a.Fragment,null,d.a.createElement("code",null,"React Native Commons Collection")," library is the most generic form of components, these components can be extended into anything specific as per your design specs.")},{title:"React Native UI Collection",imageUrl:"img/react-native-ui.svg",route:"docs/react-ui-collection",description:d.a.createElement(d.a.Fragment,null,d.a.createElement("code",null,"React Native UI Collection")," library is extended on React Native Commons collection library, creating semi-dynamic UI/UX implementation of various interfaces.")},{title:"React Native Icon Collection",imageUrl:"img/react-native-icon.svg",route:"docs/react-icon-collection",description:d.a.createElement(d.a.Fragment,null,d.a.createElement("code",null,"React Native Icon Collection")," library is a categorised sets of Reactified versions of SVG icon components, designed to be friendly for developers, you can customise icons on the fly, e.g its colors, size etc.")},{title:"React Native Logo Collection",imageUrl:"img/react-native-logo.svg",route:"docs/react-logo-collection",description:d.a.createElement(d.a.Fragment,null,d.a.createElement("code",null,"React Native Logo Collection")," library is a categorised sets of Reactified versions of SVG logo components, designed to be friendly for developers, you can customise logos on the fly, e.g its colors, size etc.")},{title:"React Native Emoji Collection",imageUrl:"img/react-native-emoji.svg",route:"docs/react-emoji-collection",description:d.a.createElement(d.a.Fragment,null,d.a.createElement("code",null,"React Native Emoji Collection")," library is a categorised sets of Reactified versions of SVG logo components, designed to be friendly for developers, you can customise emojis on the fly, e.g its size etc.")},{title:"React Native Boilerplate",imageUrl:"img/react-native-boilerplates.svg",description:d.a.createElement(d.a.Fragment,null,"A well curated and high in-demand set of ",d.a.createElement("code",null,"React Native boilerplate")," with various possibilities and combinations.")},{title:"React Design Collection",imageUrl:"img/react-design.svg",description:d.a.createElement(d.a.Fragment,null,"This project is still under development for its initial launch phase.")}];t.default=()=>{const e=Object(n.a)(),{siteConfig:t={}}=e;return d.a.createElement(g.ThemeProvider,{theme:l.theme},d.a.createElement(r.a,{title:"Hello from "+t.title,description:"Description will go into a meta tag in <head />"},d.a.createElement("header",{className:Object(s.a)("hero hero--primary",p.a.heroBanner)},d.a.createElement("div",{className:"container"},d.a.createElement("img",{src:"../../static/img/react-pakistan-logo-white.svg",alt:"React Pakistan Logo",width:"150rem"}),d.a.createElement("h1",{className:"hero__title"},t.title),d.a.createElement("h2",{className:"hero__subtitle"},t.tagline),d.a.createElement("div",{className:p.a.buttons},d.a.createElement(i.a,{className:Object(s.a)("button button--outline button--secondary button--lg",p.a.getStarted),to:Object(c.a)("docs/")},"Read Docs")))),d.a.createElement("main",null,b&&b.length>0&&d.a.createElement("section",{className:p.a.features},d.a.createElement("div",{className:"container"},d.a.createElement("div",{className:"row"},b.map(((e,t)=>d.a.createElement(E,Object(a.a)({key:t},e))))))))))}}}]);